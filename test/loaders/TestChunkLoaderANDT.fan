
// FIXME
class TestChunkLoaderANDT : Test {
	
	Int[] fmp05 := Int[
		0x41, 0x4E, 0x44, 0x54, 0x00, 0x00, 0x00, 0x48,
		0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x20, 0x02, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00,
		0x20, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x01, 0x03, 0x03, 0x00, 0xBC, 0xFF, 0xFF, 0xFF,
		0xBC, 0xFF, 0xFF, 0xFF, 0xE0, 0xFF, 0xFF, 0xFF
	]


	Int[] fmp10 := Int[
		0x41, 0x4E, 0x44, 0x54, 0x00, 0x00, 0x00, 0x48,
		0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
		0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
		0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
		0x11, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
		0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
		0xFF, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
		0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,
		0x01, 0x03, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00,
		0x01, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00
	]



//	Void testLoadChunkWorksWithValid05Data() {
//		buf := Buf()
//		fmp05.each |byte| {   
//			buf.write(byte)
//		}
//		buf.flip
//
//		chunkLoader := MapLoader().createChunkLoader(buf.in, Endian.little)
//		map := MappyMap()
//		map.mapHeader.mapVersion = Version([0, 5])
//		map.mapHeader.blockSize = 32
//		map.mapHeader.mapType = MapType.FMP05
//		map.mapHeader.endian = Endian.little
//		chunkLoader.loadChunk(map)
//	}



	Void testLoadChunkWorksWithValid10Data() {
		buf := Buf()
		fmp10.each |byte| {   
			buf.write(byte)
		}
		buf.flip

		chunkLoader := MapLoader().createChunkLoader(buf.in, Endian.little)
		map := MappyMap()
		map.mapHeader.mapVersion = Version([1, 0])
		map.mapHeader.blockSize = 32
		map.mapHeader.mapType = MapType.FMP10
		map.mapHeader.endian = Endian.little
		chunkLoader.loadChunk(map)
	}
}
